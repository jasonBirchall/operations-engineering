name: "♻️ Configure AWS Profiles Reusable Workflow"

on:
    workflow_call:
        secrets:
            iam_role:
                required: true
            gpg_private_key:
                required: true
            gpg_public_key:
                required: true
            gpg_passphrase:
                required: true

jobs:
  configure-aws-profiles:
    name: "Configure AWS profiles"
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        name: Import AWS configuration
        with:
          name: aws-config
          path: ~/.aws
        continue-on-error: true

      - uses: actions/download-artifact@v4
        id: download-aws-credentials
        name: Import AWS credentials
        with:
          name: aws-credentials
          path: ~/.aws
        continue-on-error: true

      - name: Import GPG keys
        run: |
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg
          export GPG_TTY=$(tty)
          echo "${{ secrets.gpg_private_key }}" | base64 --decode > ~/.gnupg/private.key
          echo "${{ secrets.gpg_public_key }}" | base64 --decode > ~/.gnupg/public.key
          gpg --import ~/.gnupg/private.key
          gpg --import ~/.gnupg/public.key

      - name: Decrypt AWS credentials
        if: ${{ steps.download-aws-credentials.outcome == 'success' }}
        run: echo "${{ secrets.gpg_passphrase }}" | gpg --batch --yes --passphrase-fd 0 -d ~/.aws/credentials.gpg > ~/.aws/credentials

      - name: Configure AWS credentials for accessing AWS Secrets Manager in the DSD account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.iam_role }}
          aws-region: eu-west-2
          role-duration-seconds: 900

      - name: Save AWS credentials for accessing AWS Secrets Manager in the DSD account to a new profile
        run: |
          aws configure set region ${{ env.AWS_REGION }} --profile dsd_secret_manager_access_profile
          aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }} --profile dsd_secret_manager_access_profile
          aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }} --profile dsd_secret_manager_access_profile
          aws configure set aws_session_token ${{ env.AWS_SESSION_TOKEN }} --profile dsd_secret_manager_access_profile

      - name: Encrypt AWS credentials
        run: gpg --batch --yes --passphrase ${{ secrets.gpg_passphrase }} -c ~/.aws/credentials

      - uses: actions/upload-artifact@v4
        name: Export AWS configuration
        with:
          name: aws-config
          path: ~/.aws/config
          retention-days: 1

      - uses: actions/upload-artifact@v4
        name: Export AWS credentials
        with:
          name: aws-credentials
          path: ~/.aws/credentials.gpg
          retention-days: 1
