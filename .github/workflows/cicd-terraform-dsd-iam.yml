name: "♻️ Terraform DSD"

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "terraform/dsd/**"
    branches:
      - main
  push:
    paths:
      - "terraform/dsd/**"
    branches: [ "main" ]

env:
  TERRAFORM_VERSION: "1.6.6"
  TF_VAR_github_token: ${{ secrets.TERRAFORM_ADMIN_DEV_LEVG }}

jobs:
  configure-state-profile:
    uses: ./.github/workflows/configure-aws-profile.yml
    with: 
      region: "eu-west-2"
      profile: "state_profile"
    secrets:
      role-arn: ${{ secrets.R53_BACKUP_ROLE_ARN }}

  configure-infra-profile:
    uses: ./.github/workflows/configure-aws-profile.yml
    with:
      region: "eu-west-2"
      profile: "infra_profile"
    secrets:
      role-arn: ${{ secrets.AWS_DSD_CREATE_IAM_ROLE_ARN }}

  terraform:
    name: "Terraform DSD"
    needs: [ configure-state-profile, configure-infra-profile ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write
    # strategy:
    #   matrix:
    #     path:
    #       - "iam"
    defaults:
      run:
        working-directory: "terraform/github/${{ matrix.path }}"
    steps:
    - uses: actions/checkout@v4
    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - run: aws configure list-profiles
    
    # - name: Post Link to Apply Pipeline
    #   if: github.ref == 'refs/heads/main' 
    #   uses: mshick/add-pr-comment@v1
    #   with:
    #     repo-token: ${{ secrets.GITHUB_TOKEN }}
    #     repo-token-user-login: 'github-actions[bot]'
    #     message: |
    #       Your PR is applying here: https://github.com/ministryofjustice/operations-engineering/actions/workflows/cicd-terraform-github-repos.yml?query=event%3Apush+branch%3Amain
    
    # - name: Terraform Format Check
    #   id: fmt-check
    #   run: terraform fmt -check
    
    # - name: Terraform Init
    #   id: init
    #   run: ls -latr; terraform init -input=false -no-color

    # - name: Terraform Validate
    #   id: validate
    #   run: terraform validate -no-color
      
    # - name: Terraform Plan
    #   id: plan
    #   run: terraform plan -input=false -no-color

    # - name: Delete Old Comments
    #   uses: maheshrayas/action-pr-comment-delete@v3.0
    #   with:
    #     github_token: '${{ secrets.GITHUB_TOKEN }}'
    #     org: ministryofjustice
    #     repo: operations-engineering
    #     user: 'github-actions[bot]' 
    #     issue: '${{github.event.number}}'

    # - name: Post Plan to GitHub PR
    #   if: github.ref != 'refs/heads/main'
    #   uses: mshick/add-pr-comment@v1
    #   with:
    #     repo-token: ${{ secrets.GITHUB_TOKEN }}
    #     repo-token-user-login: 'github-actions[bot]'
    #     message: |
    #       ## ${{ matrix.path }} plan
    #       ```
    #       ${{ steps.plan.outputs.stdout || steps.plan.outputs.stderr }}
    #       ```
  
    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/main'
    #   id: apply
    #   run: terraform apply -input=false -no-color -auto-approve